{* Latte template *}
{block title}{/block}
{block head}
<style type="text/css">
html,body{
    margin:0;
    height:100%;
    overflow:hidden;
}
#fireplace-img,#fireplace { 
    position: fixed;
    top: 50%;
    left: 50%;
    min-width: 100%;
    min-height: 100%;
    width: 100%;
    height: auto;
    -ms-transform: translateX(-50%) translateY(-50%);
    -moz-transform: translateX(-50%) translateY(-50%);
    -webkit-transform: translateX(-50%) translateY(-50%);
    transform: translateX(-50%) translateY(-50%);
}
#fireplace-img {
    z-index: -100;
}
#fireplace {
    z-index: -50;
    display: none;
}
#quill-wrapper{
    position: relative;
}
#quill{
    height: 100px;
    position: absolute;
}
#gossip{
    position: absolute;
    top: 43%;
    left: 37%;
    height: 25%;
    width: 25%;
    /*border: 1px solid black;*/
    font-family: JaneAusten;
    font-size: 12pt;
    color: black;
    display: none;
}
#interim{
    color: #101010;
}
</style>
{/block}
{block menu}{/block}

{block content}
<img id="fireplace-img" src="{$basePath}/images/krb-static.png">
<video muted loop poster="{$basePath}/images/krb-static.png" id="fireplace">
    <source src="{$basePath}/images/krb.mp4" type="video/mp4">
</video>
<div id="gossip">
    <span id="final"></span>
    <span id="interim"></span>
    <span id="quill-wrapper"><img id="quill" src="{$basePath}/images/quill.png"/></span>
</div>
{/block}

{block scripts}
{include parent}
<script src="{$basePath}/js/socket.io.js"></script>
<script type="text/javascript">
var socket = io("http://localhost:3000");
socket.emit('login-path', { host: {$host}, path: {link Sign:intermediate}});
socket.on('login', function(msg) {
    var temporaryToken = msg['temporary-token'];
    var lang = msg['lang'];
    $.get({$basePath}+"/sign/in?token="+temporaryToken, function(data, status) {
        if(status === "success") {
            setUp();
            recognition.lang = lang;
            recognition.start();
        }
    });
});

socket.on('logout', function(msg) {    
    recognition.stop();
    recognition.lang = '';
    $.post({link Gossip:add}, { gossip: final_transcript }, function(data, status) {
        tearDown((status === 'success'));
    });
});
    
var setUp = function() {
    video.play();
    video.style.display = 'block';
    final_elem.style.display = 'block';
};

var tearDown = function(success) {
    video.style.display = 'none';
    final_elem.style.display = 'none';
    video.pause();
};
</script>
<script type="text/javascript">
var video = document.getElementById('fireplace');
var quill = document.getElementById('quill');
var final_elem = document.getElementById('gossip');
var final_transcript = '';

var final_span = document.getElementById('final');
var interim_span = document.getElementById('interim');

if (!('webkitSpeechRecognition' in window)) {
    window.alert("SR not supported.");
} else {
    var recognition = new webkitSpeechRecognition();
    recognition.continuous = true;
    recognition.interimResults = true;
    recognition.lang = 'cs-CZ';//sk-SK

    recognition.onerror = function(event) {
        alert("Chyba: "+event.error);
    };

    recognition.onresult = function(event) {
        var interim_transcript = '';
        if (typeof(event.results) == 'undefined') {
            recognition.stop();
            alert("chyba");
            return;
        }
        for (var i = event.resultIndex; i < event.results.length; ++i) {
            if (event.results[i].isFinal) {
                final_transcript += event.results[i][0].transcript;
            } else {
                interim_transcript += event.results[i][0].transcript;
            }
        }
        final_transcript = capitalize(final_transcript);
        final_span.innerHTML = linebreak(final_transcript);
        interim_span.innerHTML = linebreak(interim_transcript);
        quill.style.top = Math.floor(random()*100)+"%";
    };
}

var two_line = /\n\n/g;
var one_line = /\n/g;
function linebreak(s) {
    return s.replace(two_line, '<p></p>').replace(one_line, '<br>');
}

var first_char = /\S/;
function capitalize(s) {
    return s.replace(first_char, function(m) { return m.toUpperCase(); });
}
</script>
{/block}